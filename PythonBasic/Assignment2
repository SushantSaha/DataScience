1.What are the two values of the Boolean data type? How do you write them?
Answer : True or False- 
		
2. What are the three different types of Boolean operators?
Answer : or
and
not

3. Make a list of each Boolean operator&#39;s truth tables (i.e. every possible combination of Boolean
values for the operator and what it evaluate ).
Answer: 
A		B		A and B		A or B		
True	True	True		True	
True	False	False		True
False	True	False		True
False	False	False		False

A		Not A
True	False
False	True

4. What are the values of the following expressions?
(5 &gt; 4) and (3 == 5)
not (5 &gt; 4)
(5 &gt; 4) or (3 == 5)
not ((5 &gt; 4) or (3 == 5))
(True and True) and (True == False)
(not False) or (not True)

Answer :

(5 &gt; 4) and (3 == 5) ---- False
not (5 &gt; 4) ----  False
(5 &gt; 4) or (3 == 5) ---- True
not ((5 &gt; 4) or (3 == 5)) ---- True
(True and True) and (True == False) ---- False
(not False) or (not True) ---- True


5. What are the six comparison operators?

Answer : 


Operator	Name						Example	
==			Equal						x == y	
!=			Not equal					x != y	
>			Greater than				x > y	
<			Less than					x < y	
>=			Greater than or equal to	x >= y	
<=			Less than or equal to		x <= y

6. How do you tell the difference between the equal to and assignment operators?Describe a
condition and when you would use one.

Answer:
Equal to : = is an equal to operator. In programming = is an assignment operator, which means that it assigns a value to a variable
Operator	Example
=			x = 5
Python Assignment Operators : Assignment operators are used to assign values to variables
Assignment operators are used to assign values to variables:

Operator	Example	
=			x = 5	x = 5	
+=			x += 3	x = x + 3	
-=			x -= 3	x = x - 3	
*=			x *= 3	x = x * 3	
/=			x /= 3	x = x / 3	
%=			x %= 3	x = x % 3	
//=			x //= 3	x = x // 3	
**=			x **= 3	x = x ** 3	
&=			x &= 3	x = x & 3	
|=			x |= 3	x = x | 3	
^=			x ^= 3	x = x ^ 3	
>>=			x >>= 3	x = x >> 3	
<<=			x <<= 3	x = x << 3


7. Identify the three blocks in this code:
spam = 0
if spam == 10:
    print('eggs')
if spam > 5:
    print('bacon')
else:
    print('ham')
    print('spam')
    print('spam')

Answer : 
ham
spam
spam

8. Write code that prints Hello if 1 is stored in spam, prints Howdy if 2 is stored in spam, and prints
Greetings! if anything else is stored in spam.

Answer :

spam= int(input("Input the value spam"))

if spam==1:
    print("hello")
elif spam==2:
    print("Howdy")
else:
    print("Greeting!")

9.If your programme is stuck in an endless loop, what keys you’ll press?

Answer : Control+C

10. How can you tell the difference between break and continue?

Answer : Both “break” and “continue” are the ‘jump’ statements, that transfer control of the program to another part of the program. The main difference between break and continue is that break is used for immediate termination of loop. On the other hand, ‘continue’ terminate the current iteration and resumes the control to the next iteration of the loop.

11. In a for loop, what is the difference between range(10), range(0, 10), and range(0, 10, 1)?

Answer : They all do the same thing. The range(10) call ranges from 0 up to (but not including) 10, range(0, 10) explicitly tells the loop to start at 0, and range(0, 10, 1) explicitly tells the loop to increase the variable by 1 on each iteration.

12. Write a short program that prints the numbers 1 to 10 using a for loop. Then write an equivalent
program that prints the numbers 1 to 10 using a while loop.

Answer:
The code:

for i in range(1, 11):
	print(i)


i = 1
while i <= 10:
	print(i)
	i = i + 1


13. If you had a function named bacon() inside a module named spam, how would you call it after
importing spam?

Answer : This function can be called with spam.bacon().
